name: Build and Push Changed Services

on:
  push:
    branches: [ main ]
    paths:
      - 'users/**'
      - 'game/**'
      - 'game-history/**'
      - '.github/workflows/build-and-push.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'users/**'
      - 'game/**'
      - 'game-history/**'
      - '.github/workflows/build-and-push.yml'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      users_changed: ${{ steps.filter.outputs.users }}
      game_changed: ${{ steps.filter.outputs.game }}
      gamehistory_changed: ${{ steps.filter.outputs.gamehistory }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # fetch all history for file change detection

      - name: Detect File Changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            users:
              - 'users/**'
            game:
              - 'game/**'
            gamehistory:
              - 'game-history/**'

  build-users:
    needs: detect-changes
    if: needs.detect-changes.outputs.users_changed == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate Version Tag
        id: version
        run: |
          echo "SHA_TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "VERSION_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push Users Image
        uses: docker/build-push-action@v4
        with:
          context: ./users
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/distr_sys-users_service:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/distr_sys-users_service:${{ steps.version.outputs.SHA_TAG }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/distr_sys-users_service:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/distr_sys-users_service:buildcache,mode=max

  build-game:
    needs: detect-changes
    if: needs.detect-changes.outputs.game_changed == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate Version Tag
        id: version
        run: |
          echo "SHA_TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "VERSION_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push Game Image
        uses: docker/build-push-action@v4
        with:
          context: ./game
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/distr_sys-game_service:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/distr_sys-game_service:${{ steps.version.outputs.SHA_TAG }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/distr_sys-game_service:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/distr_sys-game_service:buildcache,mode=max

  build-game-history:
    needs: detect-changes
    if: needs.detect-changes.outputs.gamehistory_changed == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate Version Tag
        id: version
        run: |
          echo "SHA_TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "VERSION_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push Game History Image
        uses: docker/build-push-action@v4
        with:
          context: ./game-history
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/distr_sys-game_history_service:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/distr_sys-game_history_service:${{ steps.version.outputs.SHA_TAG }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/distr_sys-game_history_service:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/distr_sys-game_history_service:buildcache,mode=max